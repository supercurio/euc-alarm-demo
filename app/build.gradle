plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.protobuf'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

if (use_hunter_debug) apply plugin: 'hunter-debug'
if (use_hunter_timing) apply plugin: 'hunter-timing'

android {
    compileSdk 32

    defaultConfig {
        applicationId "supercurio.eucalarm"
        minSdk 23
        targetSdk 32
        versionCode 30
        versionName "1.0.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'

    // Kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Protobuf lite
    implementation "com.google.protobuf:protobuf-javalite:$protobuf_version"
    implementation "com.google.protobuf:protobuf-kotlin-lite:$protobuf_version"

    implementation "com.google.accompanist:accompanist-permissions:0.20.2"

    // https://github.com/Leaking/Hunter/blob/1bc2b98c8b51ae19daf2a59c446269051657bdc2/README_hunter_debug.md
    if (use_hunter_debug) implementation 'com.quinn.hunter:hunter-debug-library:0.9.6'
    // https://github.com/Leaking/Hunter/blob/1bc2b98c8b51ae19daf2a59c446269051657bdc2/README_hunter_timing.md
    if (use_hunter_timing) implementation 'com.quinn.hunter:hunter-timing-library:0.9.1'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
                // generate kotlin protobuf runtime
                kotlin {}
            }
        }
    }
}
